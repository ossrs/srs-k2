name: "Release"

on:
  push:
    tags:
      - v1*

jobs:
  envs:
    name: envs
    steps:
      ################################################################
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate base
        run: |
          SRS_BASE=$(git describe --tags --abbrev=0 HEAD~1)
          echo "SRS_BASE=$SRS_BASE" >> $GITHUB_ENV
      ################################################################
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ env.SRS_BASE }}
          filters: |
            base: 'Dockerfile.base'
            base2:  ['Dockerfile.base', 'Dockerfile.base2']
            base3:  ['Dockerfile.base', 'Dockerfile.base2', 'Dockerfile.base3']
      ##################################################################################################################
      # The github.ref is, for example, refs/tags/v5.0.145 or refs/tags/v5.0-r8
      # Generate variables like:
      #   SRS_TAG=v1.0.52
      #   SRS_MAJOR=1
      # @see https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Generate varaiables
        run: |
          SRS_TAG=$(echo ${{ github.ref }}| awk -F '/' '{print $3}')
          echo "SRS_TAG=$SRS_TAG" >> $GITHUB_ENV
          SRS_MAJOR=$(echo $SRS_TAG| awk -F '.' '{print $1}' |sed 's/v//g')
          echo "SRS_MAJOR=$SRS_MAJOR" >> $GITHUB_ENV
    # Map a step output to a job output, see https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
    outputs:
      base: ${{ steps.filter.outputs.base }}
      base2: ${{ steps.filter.outputs.base2 }}
      base3: ${{ steps.filter.outputs.base3 }}
      SRS_TAG: ${{ env.SRS_TAG }}
      SRS_MAJOR: ${{ env.SRS_MAJOR }}
    runs-on: ubuntu-20.04

  docker-base:
    needs:
      - envs
    if: ${{ always() && needs.envs.outputs.base == 'true' }}
    steps:
      ################################################################
      - name: Checkout repository
        uses: actions/checkout@v3
      ################################################################
      # See https://github.com/crazy-max/ghaction-docker-buildx#moved-to-docker-organization
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      ################################################################
      - name: Login docker hub
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"
      - name: Build and push to docker registry
        run: |
          docker buildx build --platform linux/arm/v7,linux/arm64/v8,linux/amd64 \
            --output "type=image,push=true" \
            -t ossrs/k2:base \
            -f Dockerfile.base .
      ################################################################
      - name: Login aliyun hub
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Copy to Aliyun registry
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ossrs/k2:base
          dst: |
            registry.cn-hangzhou.aliyuncs.com/ossrs/k2:base
    runs-on: ubuntu-20.04

  docker-base2:
    needs:
      - docker-base
      - envs
    if: ${{ always() && needs.envs.outputs.base2 == 'true' }}
    steps:
      ################################################################
      - name: Checkout repository
        uses: actions/checkout@v3
      ################################################################
      # See https://github.com/crazy-max/ghaction-docker-buildx#moved-to-docker-organization
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      ################################################################
      - name: Login docker hub
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"
      - name: Build and push to docker registry
        run: |
          docker buildx build --platform linux/arm/v7,linux/arm64/v8,linux/amd64 \
            --output "type=image,push=true" \
            -t ossrs/k2:base2 \
            -f Dockerfile.base2 .
      ################################################################
      - name: Login aliyun hub
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Copy to Aliyun registry
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ossrs/k2:base2
          dst: |
            registry.cn-hangzhou.aliyuncs.com/ossrs/k2:base2
    runs-on: ubuntu-20.04

  docker-base3:
    needs:
      - docker-base2
      - envs
    if: ${{ always() && needs.envs.outputs.base3 == 'true' }}
    steps:
      ################################################################
      - name: Checkout repository
        uses: actions/checkout@v3
      ################################################################
      # See https://github.com/crazy-max/ghaction-docker-buildx#moved-to-docker-organization
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      ################################################################
      - name: Login docker hub
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"
      - name: Build and push to docker registry
        run: |
          docker buildx build --platform linux/arm64/v8,linux/amd64 \
            --output "type=image,push=true" \
            -t ossrs/k2:base3 \
            -f Dockerfile.base3 .
      ################################################################
      - name: Login aliyun hub
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Copy to Aliyun registry
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ossrs/k2:base3
          dst: |
            registry.cn-hangzhou.aliyuncs.com/ossrs/k2:base3
    runs-on: ubuntu-20.04

  docker:
    needs:
      - docker-base3
      - envs
    if: ${{ always() }}
    steps:
      - name: Covert output to env
        run: |
          echo "SRS_TAG=${{ needs.envs.outputs.SRS_TAG }}" >> $GITHUB_ENV
          echo "SRS_MAJOR=${{ needs.envs.outputs.SRS_MAJOR }}" >> $GITHUB_ENV
      # Git checkout
      - name: Checkout repository
        uses: actions/checkout@v3
      # See https://github.com/crazy-max/ghaction-docker-buildx#moved-to-docker-organization
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Create main images for Docker
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"
      - name: Build SRS docker image
        run: |
          echo "Release ossrs/srs-cloud:$SRS_TAG"
          docker buildx build --platform linux/amd64,linux/arm64/v8 \
            --output "type=image,push=true" \
            --tag ossrs/k2:$SRS_TAG -f Dockerfile .
      - name: Docker alias images for ossrs/srs-cloud
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ossrs/k2:${{ env.SRS_TAG }}
          dst: |
            ossrs/k2:${{ env.SRS_MAJOR }}
            ossrs/k2:v${{ env.SRS_MAJOR }}
    runs-on: ubuntu-20.04

  aliyun:
    needs:
      - envs
      - docker
    if: ${{ always() }}
    steps:
      - name: Covert output to env
        run: |
          echo "SRS_TAG=${{ needs.envs.outputs.SRS_TAG }}" >> $GITHUB_ENV
          echo "SRS_MAJOR=${{ needs.envs.outputs.SRS_MAJOR }}" >> $GITHUB_ENV
      # Aliyun ACR
      - name: Login Aliyun docker hub
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Docker alias images for ossrs/srs-cloud
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ossrs/k2:${{ env.SRS_TAG }}
          dst: |
            registry.cn-hangzhou.aliyuncs.com/ossrs/k2:${{ env.SRS_TAG }}
            registry.cn-hangzhou.aliyuncs.com/ossrs/k2:${{ env.SRS_MAJOR }}
            registry.cn-hangzhou.aliyuncs.com/ossrs/k2:v${{ env.SRS_MAJOR }}
    runs-on: ubuntu-20.04
